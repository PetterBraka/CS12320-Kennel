/**
 * @auther Petter Vang Brakalsvalet
 * @version 2.0 (20/02/18
 */

import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;

/**
 * To support an individual dog
 *
 * @author Chris Loftus
 * @version 1.1 (26th February 2018)
 */
public class Dog extends Animal {

    /*------------------------------------------------ CONSTRUCTORS -------------------------------------------------*/
    /**
     * Default constructor
     */
    public Dog() {
        this("unknown", 1, false, "unknown", 1);
    }

    /**
     * Constructor for the dog
     *
     * @param name        The dog's name
     * @param runs        The amount of runs the dog need in a day
     * @param likeBones   Does the dog like bones?
     * @param food        The kind of food it eats
     * @param mealsPerDay Number of feeds per day
     */
    public Dog(String name, int runs, boolean likeBones, String food, int mealsPerDay) {
        originalOwners = new ArrayList<Owner>();
        this.foodPerDay = mealsPerDay;
        this.withOthers = withOthers;
        this.likesBones = likeBones;
        this.runsADay = runs;
        this.favFood = food;
        this.name = name;
    }

    /**
     * Constructor for the dog
     *
     * @param name        The dog's name
     * @param runs        The amount of runs the dog need in a day
     * @param likeBones   Does the dog like bones?
     * @param food        The kind of food it eats
     * @param mealsPerDay Number of feeds per day
     * @param owners      The owners of the dog
     */
    public Dog(String name, int runs, boolean likeBones, String food, int mealsPerDay, ArrayList<Owner> owners) {
        this.foodPerDay = mealsPerDay;
        this.withOthers = withOthers;
        this.likesBones = likeBones;
        originalOwners = owners;
        this.runsADay = runs;
        this.favFood = food;
        this.name = name;
    }
    /*---------------------------------------------------------------------------------------------------------------*/

    /*------------------------------------------------ SAVE AND LOAD ------------------------------------------------*/
    /**
     * Will save the info about cat
     *
     * @param pw is the name of the print writer
     */
    public void save(PrintWriter pw) {
        pw.println("Dog");
        super.save(pw);
        pw.println(likesBones);
        pw.println(runsADay);
        pw.println(false);
    }

    /**
     * Saves the animals information
     *
     * @param infile The file to save to
     * @throws IOException If some IO error occurs
     */
    public void load(Scanner infile) throws IOException {
        super.load(infile);
    }
    /*---------------------------------------------------------------------------------------------------------------*/

    /*------------------------------------------------- OVERRIDDEN --------------------------------------------------*/
    /**
     * Note that this only compares equality based on a
     * dog's name.
     *
     * @param obj the other dog to compare against.
     */
    @Override
    public boolean equals(Object obj) { // Generated by IDE to be more robust
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        Dog other = (Dog) obj;
        if (name == null) {
            if (other.name != null)
                return false;
        } else if (!name.equals(other.name))
            return false;
        return true;
    }

    /**
     * @return String showing all the info about the dog
     */
    public String printDog() {
        StringBuilder sb = new StringBuilder();
        sb.append("Dog name: ");
        sb.append(name);
        sb.append("\nRuns a day: ");
        sb.append(runsADay);
        sb.append("\nOriginal Owner: ");
        sb.append(originalOwners);
        sb.append("\nLike bones: ");
        sb.append(likesBones);
        sb.append("\nFavfood: ");
        sb.append(favFood);
        sb.append("\nFoodPerDay: ");
        sb.append(foodPerDay);
        sb.append("\n");

        return sb.toString();
    }
    /*---------------------------------------------------------------------------------------------------------------*/
}
